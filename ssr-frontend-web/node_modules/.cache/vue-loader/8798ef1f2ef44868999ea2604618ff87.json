{"remainingRequest":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\src\\components\\OrderBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\src\\components\\OrderBoard.vue","mtime":1609831546191},{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1609653293369},{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1609653293376},{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1609653295176},{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1609653293369},{"path":"C:\\Users\\夏海淞\\WebstormProjects\\ssr-frontend-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1609653308845}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQoJbmFtZTogIk9yZGVyQm9hcmQiLA0KCWRhdGEoKSB7DQoJCWxldCB1cmwgPSB0aGlzLkJBU0VfVVJMICsgJ3VzZXJzL2dldC9vcmRlci8nOw0KCQlsZXQgYW5zID0ge09yZGVyRGF0YTogW119Ow0KCQlsZXQgZGV2aWNlU2V0ID0gbmV3IFNldCgpOw0KCQlmZXRjaCh1cmwsIHsNCgkJCWNyZWRlbnRpYWxzOiAnaW5jbHVkZScsDQoJCQloZWFkZXJzOiB7DQoJCQkJJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywNCgkJCX0sDQoJCQltZXRob2Q6ICdHRVQnLA0KCQkJbW9kZTogJ2NvcnMnLA0KCQl9KQ0KCQkJLnRoZW4ocmVzcCA9PiByZXNwLmpzb24oKSkNCgkJCS50aGVuKHJlc3AgPT4gew0KCQkJCWlmIChyZXNwLnN0YXR1cyA9PT0gJ29rJykgew0KCQkJCQljb25zb2xlLmxvZyhyZXNwKTsNCgkJCQkJYW5zLk9yZGVyRGF0YSA9IHJlc3AuY29udGVudDsNCgkJCQkJZm9yIChsZXQgb3JkZXIgb2YgYW5zLk9yZGVyRGF0YSkgew0KCQkJCQkJaWYgKCFkZXZpY2VTZXQuaGFzKG9yZGVyLmRldmljZSkpIHsNCgkJCQkJCQlkZXZpY2VTZXQuYWRkKG9yZGVyLmRldmljZSk7DQoJCQkJCQl9DQoJCQkJCQlvcmRlci5zeW5vcHNpcyA9IG9yZGVyLmRlc2NyaXB0aW9uLnN1YnN0cmluZygwLCA1MCk7DQoJCQkJCX0NCgkJCQkJLy8gYW5zLmZpbHRlckRldmljZT1BcnJheS5mcm9tKGRldmljZVNldCk7DQoJCQkJCWFucy5maWx0ZXJEZXZpY2UgPSBbXTsNCgkJCQkJZGV2aWNlU2V0LmZvckVhY2goZGV2aWNlID0+IGFucy5maWx0ZXJEZXZpY2UucHVzaCh7dGV4dDogZGV2aWNlLCB2YWx1ZTogZGV2aWNlfSkpOw0KCQkJCQljb25zb2xlLmxvZyhhbnMuT3JkZXJEYXRhKTsNCgkJCQl9IGVsc2Ugew0KCQkJCQlsZXQgcmVhc29uID0gcmVzcC50eXBlOw0KCQkJCQlsZXQgbWVzc2FnZTsNCgkJCQkJc3dpdGNoIChyZWFzb24pIHsNCgkJCQkJCWNhc2UgJ0FscmVhZHkgbG9nb3V0Lic6DQoJCQkJCQkJbWVzc2FnZSA9ICfnlKjmiLflt7Lnmbvlh7rjgIInOw0KCQkJCQkJCWJyZWFrOw0KCQkJCQkJZGVmYXVsdDoNCgkJCQkJCQltZXNzYWdlID0gJ+acquefpemUmeivr+OAgicNCgkJCQkJfQ0KCQkJCQl0aGlzLiRtZXNzYWdlKHsNCgkJCQkJCXR5cGU6ICdlcnJvcicsDQoJCQkJCQltZXNzYWdlLA0KCQkJCQkJc2hvd0Nsb3NlOiB0cnVlDQoJCQkJCX0pOw0KCQkJCX0NCgkJCX0pDQoJCQkuY2F0Y2gocmVhc29uID0+IHsNCgkJCQljb25zb2xlLmxvZygncmVhc29uOicsIHJlYXNvbik7DQoJCQkJdGhpcy4kbWVzc2FnZSh7DQoJCQkJCXR5cGU6ICdlcnJvcicsDQoJCQkJCW1lc3NhZ2U6ICfnvZHnu5zmlYXpmpzmiJbmnI3liqHlmajkuI3lj6/nlKjjgIInLA0KCQkJCQlzaG93Q2xvc2U6IHRydWUNCgkJCQl9KTsNCgkJCX0pOw0KCQlyZXR1cm4gYW5zOw0KCX0sDQoJbWV0aG9kczogew0KCQlmaWx0ZXJIYW5kbGVyKHZhbHVlLCByb3csIGNvbHVtbikgew0KCQkJY29uc3QgcHJvcGVydHkgPSBjb2x1bW5bJ3Byb3BlcnR5J107DQoJCQlyZXR1cm4gcm93W3Byb3BlcnR5XSA9PT0gdmFsdWU7DQoJCX0sDQoJfSwNCn0NCg=="},{"version":3,"sources":["OrderBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OrderBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\t<div id=\"OrderBoard\">\r\n\t\t<el-table :data=\"OrderData\" stripe style=\"width: 100%\">\r\n\t\t\t<el-table-column\r\n\t\t\t\tprop=\"device\"\r\n\t\t\t\tlabel=\"设备名\"\r\n\t\t\t\t:filters=\"$data.filterDevice\"\r\n\t\t\t\t:filter-method=\"filterHandler\"\r\n\t\t\t\tsortable>\r\n\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t<i class=\"el-icon-monitor\"></i>\r\n\t\t\t\t\t<span style=\"margin-left: 10px\">{{ scope.row.device }}</span>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column\r\n\t\t\t\tprop=\"type\"\r\n\t\t\t\tlabel=\"工单类型\"\r\n\t\t\t\t:filters=\"[\r\n\t\t\t\t\t{text:'物理损坏',value:'物理损坏'},\r\n\t\t\t\t\t{text:'无法启动',value:'无法启动'},\r\n\t\t\t\t\t{text:'无法进出',value:'无法进出'},\r\n\t\t\t\t\t{text:'其他原因',value:'其他原因'},\r\n\t\t\t\t]\"\r\n\t\t\t\t:filter-method=\"filterHandler\"\r\n\t\t\t\tsortable>\r\n\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t<span>{{ scope.row.type }}</span>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t\t<el-table-column\r\n\t\t\t\tprop=\"synopsis\"\r\n\t\t\t\tlabel=\"描述\">\r\n\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t<el-popover trigger=\"hover\" placement=\"top\">\r\n\t\t\t\t\t\t<p>完整描述：{{ scope.row.description }}</p>\r\n\t\t\t\t\t\t<div slot=\"reference\" class=\"synopsis-wrapper\">\r\n\t\t\t\t\t\t\t<el-tag size=\"medium\">{{ scope.row.synopsis }}</el-tag>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</el-popover>\r\n\t\t\t\t</template>\r\n\t\t\t</el-table-column>\r\n\t\t</el-table>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tname: \"OrderBoard\",\r\n\tdata() {\r\n\t\tlet url = this.BASE_URL + 'users/get/order/';\r\n\t\tlet ans = {OrderData: []};\r\n\t\tlet deviceSet = new Set();\r\n\t\tfetch(url, {\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tmethod: 'GET',\r\n\t\t\tmode: 'cors',\r\n\t\t})\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(resp => {\r\n\t\t\t\tif (resp.status === 'ok') {\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t\tans.OrderData = resp.content;\r\n\t\t\t\t\tfor (let order of ans.OrderData) {\r\n\t\t\t\t\t\tif (!deviceSet.has(order.device)) {\r\n\t\t\t\t\t\t\tdeviceSet.add(order.device);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\torder.synopsis = order.description.substring(0, 50);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ans.filterDevice=Array.from(deviceSet);\r\n\t\t\t\t\tans.filterDevice = [];\r\n\t\t\t\t\tdeviceSet.forEach(device => ans.filterDevice.push({text: device, value: device}));\r\n\t\t\t\t\tconsole.log(ans.OrderData);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet reason = resp.type;\r\n\t\t\t\t\tlet message;\r\n\t\t\t\t\tswitch (reason) {\r\n\t\t\t\t\t\tcase 'Already logout.':\r\n\t\t\t\t\t\t\tmessage = '用户已登出。';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmessage = '未知错误。'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t\tmessage,\r\n\t\t\t\t\t\tshowClose: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(reason => {\r\n\t\t\t\tconsole.log('reason:', reason);\r\n\t\t\t\tthis.$message({\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\tmessage: '网络故障或服务器不可用。',\r\n\t\t\t\t\tshowClose: true\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\treturn ans;\r\n\t},\r\n\tmethods: {\r\n\t\tfilterHandler(value, row, column) {\r\n\t\t\tconst property = column['property'];\r\n\t\t\treturn row[property] === value;\r\n\t\t},\r\n\t},\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}